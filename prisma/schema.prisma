generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entity {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String

  members Member[]

  @@map(name: "entities")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  email     String   @unique
  password  String
  role      String

  roles Roles[]

  @@map(name: "users")
}

model Roles {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  users User[]

  @@map(name: "roles")
}

model Member {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Entity    Entity   @relation(fields: [entityId], references: [id])
  entityId  Int      @unique @map("entity_id")

  movements Movement[]

  @@map(name: "members")
}

model Movement {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  date           DateTime
  value          Float
  member         Member       @relation(fields: [memberId], references: [id])
  memberId       Int          @unique @map("member_id")
  movementType   MovementType @relation(fields: [movementTypeId], references: [id])
  movementTypeId Int          @unique @map("movement_type_id")

  @@map(name: "movements")
}

model MovementType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  movements Movement[]

  @@map(name: "movement_types")
}
