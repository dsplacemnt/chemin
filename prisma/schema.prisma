generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entity {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String

  members Member[]

  @@map(name: "entities")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  email     String
  password  String
  role      String

  members Member[]
  roles   Roles[]

  @@unique([email])
  @@map(name: "users")
}

model Roles {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  users User[]

  @@map(name: "roles")
}

model Member {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  entity    Entity   @relation(fields: [entityId], references: [id])
  entityId  String   @map("entity_id")

  movements Movement[]

  @@map(name: "members")
}

model Movement {
  id        String       @id @default(cuid())
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  date      DateTime
  value     Float
  member    Member       @relation(fields: [memberId], references: [id])
  memberId  String       @map("member_id")
  typeId    String       @map("type_id")
  type      MovementType @relation(fields: [typeId], references: [id])

  @@map(name: "movements")
}

model MovementType {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  movements Movement[]

  @@map(name: "movement_types")
}
