generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id Int @id @default(autoincrement())

  name String

  users        User[]
  members      Member[]
  roles        Role[]
  movements    Movement[]
  movemetTypes MovementType[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map(name: "organizations")
}

model User {
  id Int @id @default(autoincrement())

  name     String
  email    String @unique
  password String

  organizationId Int          @map("organization_id")
  Organization   Organization @relation(fields: [organizationId], references: [id])

  roles Role[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map(name: "users")
}

model Role {
  id Int @id @default(autoincrement())

  name String

  organizationId Int          @map("organization_id")
  organization   Organization @relation(fields: [organizationId], references: [id])

  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "roles")
}

model Member {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  email     String

  organizationId Int          @map("organization_id")
  organization   Organization @relation(fields: [organizationId], references: [id])

  movements Movement[]

  @@map(name: "members")
}

model Movement {
  id Int @id @default(autoincrement())

  date  DateTime
  value Float

  memberId       Int          @map("member_id")
  member         Member       @relation(fields: [memberId], references: [id])
  movementTypeId Int          @map("movement_type_id")
  movementType   MovementType @relation(fields: [movementTypeId], references: [id])
  organizationId Int          @map("organization_id")
  organization   Organization @relation(fields: [organizationId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map(name: "movements")
}

model MovementType {
  id Int @id @default(autoincrement())

  name String

  organizationId Int          @map("organization_id")
  organization   Organization @relation(fields: [organizationId], references: [id])

  movements Movement[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "movement_types")
}
